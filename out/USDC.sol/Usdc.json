{
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "burn",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "burnFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "mint",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x60806040523480156200001157600080fd5b506040805180820182526004808252635553444360e01b60208084018290528451808601909552918452908301529060036200004e838262000289565b5060046200005d828262000289565b5050506200007a62000074620000a260201b60201c565b620000a6565b6200009c336200009060126305f5e1006200036b565b63ffffffff16620000f8565b620003b2565b3390565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6001600160a01b038216620001535760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015260640160405180910390fd5b806002600082825462000167919062000396565b90915550506001600160a01b038216600090815260208190526040812080548392906200019690849062000396565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b505050565b634e487b7160e01b600052604160045260246000fd5b600181811c908216806200021057607f821691505b6020821081036200023157634e487b7160e01b600052602260045260246000fd5b50919050565b601f821115620001e057600081815260208120601f850160051c81016020861015620002605750805b601f850160051c820191505b8181101562000281578281556001016200026c565b505050505050565b81516001600160401b03811115620002a557620002a5620001e5565b620002bd81620002b68454620001fb565b8462000237565b602080601f831160018114620002f55760008415620002dc5750858301515b600019600386901b1c1916600185901b17855562000281565b600085815260208120601f198616915b82811015620003265788860151825594840194600190910190840162000305565b5085821015620003455787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b634e487b7160e01b600052601160045260246000fd5b63ffffffff8181168382160280821691908281146200038e576200038e62000355565b505092915050565b80820180821115620003ac57620003ac62000355565b92915050565b610e6c80620003c26000396000f3fe608060405234801561001057600080fd5b50600436106101165760003560e01c8063715018a6116100a2578063a457c2d711610071578063a457c2d714610232578063a9059cbb14610245578063beabacc814610258578063dd62ed3e1461026b578063f2fde38b146102a457600080fd5b8063715018a6146101f457806379cc6790146101fc5780638da5cb5b1461020f57806395d89b411461022a57600080fd5b8063313ce567116100e9578063313ce56714610181578063395093511461019057806340c10f19146101a357806342966c68146101b857806370a08231146101cb57600080fd5b806306fdde031461011b578063095ea7b31461013957806318160ddd1461015c57806323b872dd1461016e575b600080fd5b6101236102b7565b6040516101309190610c4d565b60405180910390f35b61014c610147366004610cb7565b610349565b6040519015158152602001610130565b6002545b604051908152602001610130565b61014c61017c366004610ce1565b610363565b60405160128152602001610130565b61014c61019e366004610cb7565b610387565b6101b66101b1366004610cb7565b6103c6565b005b6101b66101c6366004610d1d565b610451565b6101606101d9366004610d36565b6001600160a01b031660009081526020819052604090205490565b6101b661045e565b6101b661020a366004610cb7565b610494565b6005546040516001600160a01b039091168152602001610130565b6101236104a9565b61014c610240366004610cb7565b6104b8565b61014c610253366004610cb7565b61054a565b6101b6610266366004610ce1565b610558565b610160610279366004610d58565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6101b66102b2366004610d36565b6105b2565b6060600380546102c690610d8b565b80601f01602080910402602001604051908101604052809291908181526020018280546102f290610d8b565b801561033f5780601f106103145761010080835404028352916020019161033f565b820191906000526020600020905b81548152906001019060200180831161032257829003601f168201915b5050505050905090565b60003361035781858561064a565b60019150505b92915050565b60003361037185828561076e565b61037c858585610800565b506001949350505050565b3360008181526001602090815260408083206001600160a01b038716845290915281205490919061035790829086906103c1908790610ddb565b61064a565b6005546001600160a01b031633146103f95760405162461bcd60e51b81526004016103f090610dee565b60405180910390fd5b6001600160a01b0382166104435760405162461bcd60e51b815260206004820152601160248201527016995c9bc81859191c995cdcc81cd95b9d607a1b60448201526064016103f0565b61044d82826109ce565b5050565b61045b3382610aad565b50565b6005546001600160a01b031633146104885760405162461bcd60e51b81526004016103f090610dee565b6104926000610bfb565b565b61049f82338361076e565b61044d8282610aad565b6060600480546102c690610d8b565b3360008181526001602090815260408083206001600160a01b03871684529091528120549091908381101561053d5760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084016103f0565b61037c828686840361064a565b600033610357818585610800565b6001600160a01b0382166105a25760405162461bcd60e51b815260206004820152601160248201527016995c9bc81859191c995cdcc81cd95b9d607a1b60448201526064016103f0565b6105ad838383610800565b505050565b6005546001600160a01b031633146105dc5760405162461bcd60e51b81526004016103f090610dee565b6001600160a01b0381166106415760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016103f0565b61045b81610bfb565b6001600160a01b0383166106ac5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016103f0565b6001600160a01b03821661070d5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016103f0565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6001600160a01b0383811660009081526001602090815260408083209386168352929052205460001981146107fa57818110156107ed5760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e636500000060448201526064016103f0565b6107fa848484840361064a565b50505050565b6001600160a01b0383166108645760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016103f0565b6001600160a01b0382166108c65760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016103f0565b6001600160a01b0383166000908152602081905260409020548181101561093e5760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b60648201526084016103f0565b6001600160a01b03808516600090815260208190526040808220858503905591851681529081208054849290610975908490610ddb565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516109c191815260200190565b60405180910390a36107fa565b6001600160a01b038216610a245760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f20616464726573730060448201526064016103f0565b8060026000828254610a369190610ddb565b90915550506001600160a01b03821660009081526020819052604081208054839290610a63908490610ddb565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b6001600160a01b038216610b0d5760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b60648201526084016103f0565b6001600160a01b03821660009081526020819052604090205481811015610b815760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b60648201526084016103f0565b6001600160a01b0383166000908152602081905260408120838303905560028054849290610bb0908490610e23565b90915550506040518281526000906001600160a01b038516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a3505050565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b600060208083528351808285015260005b81811015610c7a57858101830151858201604001528201610c5e565b506000604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b0381168114610cb257600080fd5b919050565b60008060408385031215610cca57600080fd5b610cd383610c9b565b946020939093013593505050565b600080600060608486031215610cf657600080fd5b610cff84610c9b565b9250610d0d60208501610c9b565b9150604084013590509250925092565b600060208284031215610d2f57600080fd5b5035919050565b600060208284031215610d4857600080fd5b610d5182610c9b565b9392505050565b60008060408385031215610d6b57600080fd5b610d7483610c9b565b9150610d8260208401610c9b565b90509250929050565b600181811c90821680610d9f57607f821691505b602082108103610dbf57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b8082018082111561035d5761035d610dc5565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b8181038181111561035d5761035d610dc556fea26469706673582212200687f52db24588e0f48ef2cd9fe5b969a33b145ecfbf6fa95a938030c54a26ef64736f6c63430008110033",
    "sourceMap": "317:586:27:-:0;;;370:107;;;;;;;;;-1:-1:-1;1978:113:15;;;;;;;;;;;;-1:-1:-1;;;1978:113:15;;;;;;;;;;;;;;;;;;;;;;;2044:5;:13;1978:113;2044:5;:13;:::i;:::-;-1:-1:-1;2067:7:15;:17;2077:7;2067;:17;:::i;:::-;;1978:113;;921:32:14;940:12;:10;;;:12;;:::i;:::-;921:18;:32::i;:::-;425:45:27::1;431:10;443:26;719:2:::0;443:13:::1;:26;:::i;:::-;425:45;;:5;:45::i;:::-;317:586:::0;;640:96:19;719:10;;640:96::o;2270:187:14:-;2362:6;;;-1:-1:-1;;;;;2378:17:14;;;-1:-1:-1;;;;;;2378:17:14;;;;;;;2410:40;;2362:6;;;2378:17;2362:6;;2410:40;;2343:16;;2410:40;2333:124;2270:187;:::o;8415:389:15:-;-1:-1:-1;;;;;8498:21:15;;8490:65;;;;-1:-1:-1;;;8490:65:15;;3323:2:32;8490:65:15;;;3305:21:32;3362:2;3342:18;;;3335:30;3401:33;3381:18;;;3374:61;3452:18;;8490:65:15;;;;;;;;8642:6;8626:12;;:22;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;;;8658:18:15;;:9;:18;;;;;;;;;;:28;;8680:6;;8658:9;:28;;8680:6;;8658:28;:::i;:::-;;;;-1:-1:-1;;8701:37:15;;3757:25:32;;;-1:-1:-1;;;;;8701:37:15;;;8718:1;;8701:37;;3745:2:32;3730:18;8701:37:15;;;;;;;8415:389;;:::o;11795:121::-;;;;:::o;14:127:32:-;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:380;225:1;221:12;;;;268;;;289:61;;343:4;335:6;331:17;321:27;;289:61;396:2;388:6;385:14;365:18;362:38;359:161;;442:10;437:3;433:20;430:1;423:31;477:4;474:1;467:15;505:4;502:1;495:15;359:161;;146:380;;;:::o;657:545::-;759:2;754:3;751:11;748:448;;;795:1;820:5;816:2;809:17;865:4;861:2;851:19;935:2;923:10;919:19;916:1;912:27;906:4;902:38;971:4;959:10;956:20;953:47;;;-1:-1:-1;994:4:32;953:47;1049:2;1044:3;1040:12;1037:1;1033:20;1027:4;1023:31;1013:41;;1104:82;1122:2;1115:5;1112:13;1104:82;;;1167:17;;;1148:1;1137:13;1104:82;;;1108:3;;;657:545;;;:::o;1378:1352::-;1498:10;;-1:-1:-1;;;;;1520:30:32;;1517:56;;;1553:18;;:::i;:::-;1582:97;1672:6;1632:38;1664:4;1658:11;1632:38;:::i;:::-;1626:4;1582:97;:::i;:::-;1734:4;;1798:2;1787:14;;1815:1;1810:663;;;;2517:1;2534:6;2531:89;;;-1:-1:-1;2586:19:32;;;2580:26;2531:89;-1:-1:-1;;1335:1:32;1331:11;;;1327:24;1323:29;1313:40;1359:1;1355:11;;;1310:57;2633:81;;1780:944;;1810:663;604:1;597:14;;;641:4;628:18;;-1:-1:-1;;1846:20:32;;;1964:236;1978:7;1975:1;1972:14;1964:236;;;2067:19;;;2061:26;2046:42;;2159:27;;;;2127:1;2115:14;;;;1994:19;;1964:236;;;1968:3;2228:6;2219:7;2216:19;2213:201;;;2289:19;;;2283:26;-1:-1:-1;;2372:1:32;2368:14;;;2384:3;2364:24;2360:37;2356:42;2341:58;2326:74;;2213:201;-1:-1:-1;;;;;2460:1:32;2444:14;;;2440:22;2427:36;;-1:-1:-1;1378:1352:32:o;2735:127::-;2796:10;2791:3;2787:20;2784:1;2777:31;2827:4;2824:1;2817:15;2851:4;2848:1;2841:15;2867:249;2938:10;2980;;;2992;;;2976:27;3023:20;;;;2938:10;3062:24;;;3052:58;;3090:18;;:::i;:::-;3052:58;;2867:249;;;;:::o;3481:125::-;3546:9;;;3567:10;;;3564:36;;;3580:18;;:::i;:::-;3481:125;;;;:::o;3611:177::-;317:586:27;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561001057600080fd5b50600436106101165760003560e01c8063715018a6116100a2578063a457c2d711610071578063a457c2d714610232578063a9059cbb14610245578063beabacc814610258578063dd62ed3e1461026b578063f2fde38b146102a457600080fd5b8063715018a6146101f457806379cc6790146101fc5780638da5cb5b1461020f57806395d89b411461022a57600080fd5b8063313ce567116100e9578063313ce56714610181578063395093511461019057806340c10f19146101a357806342966c68146101b857806370a08231146101cb57600080fd5b806306fdde031461011b578063095ea7b31461013957806318160ddd1461015c57806323b872dd1461016e575b600080fd5b6101236102b7565b6040516101309190610c4d565b60405180910390f35b61014c610147366004610cb7565b610349565b6040519015158152602001610130565b6002545b604051908152602001610130565b61014c61017c366004610ce1565b610363565b60405160128152602001610130565b61014c61019e366004610cb7565b610387565b6101b66101b1366004610cb7565b6103c6565b005b6101b66101c6366004610d1d565b610451565b6101606101d9366004610d36565b6001600160a01b031660009081526020819052604090205490565b6101b661045e565b6101b661020a366004610cb7565b610494565b6005546040516001600160a01b039091168152602001610130565b6101236104a9565b61014c610240366004610cb7565b6104b8565b61014c610253366004610cb7565b61054a565b6101b6610266366004610ce1565b610558565b610160610279366004610d58565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6101b66102b2366004610d36565b6105b2565b6060600380546102c690610d8b565b80601f01602080910402602001604051908101604052809291908181526020018280546102f290610d8b565b801561033f5780601f106103145761010080835404028352916020019161033f565b820191906000526020600020905b81548152906001019060200180831161032257829003601f168201915b5050505050905090565b60003361035781858561064a565b60019150505b92915050565b60003361037185828561076e565b61037c858585610800565b506001949350505050565b3360008181526001602090815260408083206001600160a01b038716845290915281205490919061035790829086906103c1908790610ddb565b61064a565b6005546001600160a01b031633146103f95760405162461bcd60e51b81526004016103f090610dee565b60405180910390fd5b6001600160a01b0382166104435760405162461bcd60e51b815260206004820152601160248201527016995c9bc81859191c995cdcc81cd95b9d607a1b60448201526064016103f0565b61044d82826109ce565b5050565b61045b3382610aad565b50565b6005546001600160a01b031633146104885760405162461bcd60e51b81526004016103f090610dee565b6104926000610bfb565b565b61049f82338361076e565b61044d8282610aad565b6060600480546102c690610d8b565b3360008181526001602090815260408083206001600160a01b03871684529091528120549091908381101561053d5760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084016103f0565b61037c828686840361064a565b600033610357818585610800565b6001600160a01b0382166105a25760405162461bcd60e51b815260206004820152601160248201527016995c9bc81859191c995cdcc81cd95b9d607a1b60448201526064016103f0565b6105ad838383610800565b505050565b6005546001600160a01b031633146105dc5760405162461bcd60e51b81526004016103f090610dee565b6001600160a01b0381166106415760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016103f0565b61045b81610bfb565b6001600160a01b0383166106ac5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016103f0565b6001600160a01b03821661070d5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016103f0565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6001600160a01b0383811660009081526001602090815260408083209386168352929052205460001981146107fa57818110156107ed5760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e636500000060448201526064016103f0565b6107fa848484840361064a565b50505050565b6001600160a01b0383166108645760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016103f0565b6001600160a01b0382166108c65760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016103f0565b6001600160a01b0383166000908152602081905260409020548181101561093e5760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b60648201526084016103f0565b6001600160a01b03808516600090815260208190526040808220858503905591851681529081208054849290610975908490610ddb565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516109c191815260200190565b60405180910390a36107fa565b6001600160a01b038216610a245760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f20616464726573730060448201526064016103f0565b8060026000828254610a369190610ddb565b90915550506001600160a01b03821660009081526020819052604081208054839290610a63908490610ddb565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b6001600160a01b038216610b0d5760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b60648201526084016103f0565b6001600160a01b03821660009081526020819052604090205481811015610b815760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b60648201526084016103f0565b6001600160a01b0383166000908152602081905260408120838303905560028054849290610bb0908490610e23565b90915550506040518281526000906001600160a01b038516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a3505050565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b600060208083528351808285015260005b81811015610c7a57858101830151858201604001528201610c5e565b506000604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b0381168114610cb257600080fd5b919050565b60008060408385031215610cca57600080fd5b610cd383610c9b565b946020939093013593505050565b600080600060608486031215610cf657600080fd5b610cff84610c9b565b9250610d0d60208501610c9b565b9150604084013590509250925092565b600060208284031215610d2f57600080fd5b5035919050565b600060208284031215610d4857600080fd5b610d5182610c9b565b9392505050565b60008060408385031215610d6b57600080fd5b610d7483610c9b565b9150610d8260208401610c9b565b90509250929050565b600181811c90821680610d9f57607f821691505b602082108103610dbf57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b8082018082111561035d5761035d610dc5565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b8181038181111561035d5761035d610dc556fea26469706673582212200687f52db24588e0f48ef2cd9fe5b969a33b145ecfbf6fa95a938030c54a26ef64736f6c63430008110033",
    "sourceMap": "317:586:27:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2156:98:15;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4433:197;;;;;;:::i;:::-;;:::i;:::-;;;1169:14:32;;1162:22;1144:41;;1132:2;1117:18;4433:197:15;1004:187:32;3244:106:15;3331:12;;3244:106;;;1342:25:32;;;1330:2;1315:18;3244:106:15;1196:177:32;5192:286:15;;;;;;:::i;:::-;;:::i;636:89:27:-;;;719:2;1853:36:32;;1841:2;1826:18;636:89:27;1711:184:32;5873:236:15;;;;;;:::i;:::-;;:::i;483:148:27:-;;;;;;:::i;:::-;;:::i;:::-;;578:89:17;;;;;;:::i;:::-;;:::i;3408:125:15:-;;;;;;:::i;:::-;-1:-1:-1;;;;;3508:18:15;3482:7;3508:18;;;;;;;;;;;;3408:125;1668:101:14;;;:::i;973:161:17:-;;;;;;:::i;:::-;;:::i;1036:85:14:-;1108:6;;1036:85;;-1:-1:-1;;;;;1108:6:14;;;2422:51:32;;2410:2;2395:18;1036:85:14;2276:203:32;2367:102:15;;;:::i;6596:429::-;;;;;;:::i;:::-;;:::i;3729:189::-;;;;;;:::i;:::-;;:::i;731:168:27:-;;;;;;:::i;:::-;;:::i;3976:149:15:-;;;;;;:::i;:::-;-1:-1:-1;;;;;4091:18:15;;;4065:7;4091:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;3976:149;1918:198:14;;;;;;:::i;:::-;;:::i;2156:98:15:-;2210:13;2242:5;2235:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2156:98;:::o;4433:197::-;4516:4;719:10:19;4570:32:15;719:10:19;4586:7:15;4595:6;4570:8;:32::i;:::-;4619:4;4612:11;;;4433:197;;;;;:::o;5192:286::-;5319:4;719:10:19;5375:38:15;5391:4;719:10:19;5406:6:15;5375:15;:38::i;:::-;5423:27;5433:4;5439:2;5443:6;5423:9;:27::i;:::-;-1:-1:-1;5467:4:15;;5192:286;-1:-1:-1;;;;5192:286:15:o;5873:236::-;719:10:19;5961:4:15;6040:18;;;:11;:18;;;;;;;;-1:-1:-1;;;;;6040:27:15;;;;;;;;;;5961:4;;719:10:19;6015:66:15;;719:10:19;;6040:27:15;;:40;;6070:10;;6040:40;:::i;:::-;6015:8;:66::i;483:148:27:-;1108:6:14;;-1:-1:-1;;;;;1108:6:14;719:10:19;1248:23:14;1240:68;;;;-1:-1:-1;;;1240:68:14;;;;;;;:::i;:::-;;;;;;;;;-1:-1:-1;;;;;562:14:27;::::1;554:43;;;::::0;-1:-1:-1;;;554:43:27;;3959:2:32;554:43:27::1;::::0;::::1;3941:21:32::0;3998:2;3978:18;;;3971:30;-1:-1:-1;;;4017:18:32;;;4010:47;4074:18;;554:43:27::1;3757:341:32::0;554:43:27::1;607:17;613:2;617:6;607:5;:17::i;:::-;483:148:::0;;:::o;578:89:17:-;633:27;719:10:19;653:6:17;633:5;:27::i;:::-;578:89;:::o;1668:101:14:-;1108:6;;-1:-1:-1;;;;;1108:6:14;719:10:19;1248:23:14;1240:68;;;;-1:-1:-1;;;1240:68:14;;;;;;;:::i;:::-;1732:30:::1;1759:1;1732:18;:30::i;:::-;1668:101::o:0;973:161:17:-;1049:46;1065:7;719:10:19;1088:6:17;1049:15;:46::i;:::-;1105:22;1111:7;1120:6;1105:5;:22::i;2367:102:15:-;2423:13;2455:7;2448:14;;;;;:::i;6596:429::-;719:10:19;6689:4:15;6770:18;;;:11;:18;;;;;;;;-1:-1:-1;;;;;6770:27:15;;;;;;;;;;6689:4;;719:10:19;6815:35:15;;;;6807:85;;;;-1:-1:-1;;;6807:85:15;;4305:2:32;6807:85:15;;;4287:21:32;4344:2;4324:18;;;4317:30;4383:34;4363:18;;;4356:62;-1:-1:-1;;;4434:18:32;;;4427:35;4479:19;;6807:85:15;4103:401:32;6807:85:15;6926:60;6935:5;6942:7;6970:15;6951:16;:34;6926:8;:60::i;3729:189::-;3808:4;719:10:19;3862:28:15;719:10:19;3879:2:15;3883:6;3862:9;:28::i;731:168:27:-;-1:-1:-1;;;;;820:14:27;;812:43;;;;-1:-1:-1;;;812:43:27;;3959:2:32;812:43:27;;;3941:21:32;3998:2;3978:18;;;3971:30;-1:-1:-1;;;4017:18:32;;;4010:47;4074:18;;812:43:27;3757:341:32;812:43:27;865:27;875:4;880:2;884:7;865:9;:27::i;:::-;731:168;;;:::o;1918:198:14:-;1108:6;;-1:-1:-1;;;;;1108:6:14;719:10:19;1248:23:14;1240:68;;;;-1:-1:-1;;;1240:68:14;;;;;;;:::i;:::-;-1:-1:-1;;;;;2006:22:14;::::1;1998:73;;;::::0;-1:-1:-1;;;1998:73:14;;4711:2:32;1998:73:14::1;::::0;::::1;4693:21:32::0;4750:2;4730:18;;;4723:30;4789:34;4769:18;;;4762:62;-1:-1:-1;;;4840:18:32;;;4833:36;4886:19;;1998:73:14::1;4509:402:32::0;1998:73:14::1;2081:28;2100:8;2081:18;:28::i;10123:370:15:-:0;-1:-1:-1;;;;;10254:19:15;;10246:68;;;;-1:-1:-1;;;10246:68:15;;5118:2:32;10246:68:15;;;5100:21:32;5157:2;5137:18;;;5130:30;5196:34;5176:18;;;5169:62;-1:-1:-1;;;5247:18:32;;;5240:34;5291:19;;10246:68:15;4916:400:32;10246:68:15;-1:-1:-1;;;;;10332:21:15;;10324:68;;;;-1:-1:-1;;;10324:68:15;;5523:2:32;10324:68:15;;;5505:21:32;5562:2;5542:18;;;5535:30;5601:34;5581:18;;;5574:62;-1:-1:-1;;;5652:18:32;;;5645:32;5694:19;;10324:68:15;5321:398:32;10324:68:15;-1:-1:-1;;;;;10403:18:15;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;10454:32;;1342:25:32;;;10454:32:15;;1315:18:32;10454:32:15;;;;;;;10123:370;;;:::o;10770:441::-;-1:-1:-1;;;;;4091:18:15;;;10900:24;4091:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;-1:-1:-1;;10966:37:15;;10962:243;;11047:6;11027:16;:26;;11019:68;;;;-1:-1:-1;;;11019:68:15;;5926:2:32;11019:68:15;;;5908:21:32;5965:2;5945:18;;;5938:30;6004:31;5984:18;;;5977:59;6053:18;;11019:68:15;5724:353:32;11019:68:15;11129:51;11138:5;11145:7;11173:6;11154:16;:25;11129:8;:51::i;:::-;10890:321;10770:441;;;:::o;7488:651::-;-1:-1:-1;;;;;7614:18:15;;7606:68;;;;-1:-1:-1;;;7606:68:15;;6284:2:32;7606:68:15;;;6266:21:32;6323:2;6303:18;;;6296:30;6362:34;6342:18;;;6335:62;-1:-1:-1;;;6413:18:32;;;6406:35;6458:19;;7606:68:15;6082:401:32;7606:68:15;-1:-1:-1;;;;;7692:16:15;;7684:64;;;;-1:-1:-1;;;7684:64:15;;6690:2:32;7684:64:15;;;6672:21:32;6729:2;6709:18;;;6702:30;6768:34;6748:18;;;6741:62;-1:-1:-1;;;6819:18:32;;;6812:33;6862:19;;7684:64:15;6488:399:32;7684:64:15;-1:-1:-1;;;;;7830:15:15;;7808:19;7830:15;;;;;;;;;;;7863:21;;;;7855:72;;;;-1:-1:-1;;;7855:72:15;;7094:2:32;7855:72:15;;;7076:21:32;7133:2;7113:18;;;7106:30;7172:34;7152:18;;;7145:62;-1:-1:-1;;;7223:18:32;;;7216:36;7269:19;;7855:72:15;6892:402:32;7855:72:15;-1:-1:-1;;;;;7961:15:15;;;:9;:15;;;;;;;;;;;7979:20;;;7961:38;;8019:13;;;;;;;;:23;;7993:6;;7961:9;8019:23;;7993:6;;8019:23;:::i;:::-;;;;;;;;8073:2;-1:-1:-1;;;;;8058:26:15;8067:4;-1:-1:-1;;;;;8058:26:15;;8077:6;8058:26;;;;1342:25:32;;1330:2;1315:18;;1196:177;8058:26:15;;;;;;;;8095:37;731:168:27;8415:389:15;-1:-1:-1;;;;;8498:21:15;;8490:65;;;;-1:-1:-1;;;8490:65:15;;7501:2:32;8490:65:15;;;7483:21:32;7540:2;7520:18;;;7513:30;7579:33;7559:18;;;7552:61;7630:18;;8490:65:15;7299:355:32;8490:65:15;8642:6;8626:12;;:22;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;;;8658:18:15;;:9;:18;;;;;;;;;;:28;;8680:6;;8658:9;:28;;8680:6;;8658:28;:::i;:::-;;;;-1:-1:-1;;8701:37:15;;1342:25:32;;;-1:-1:-1;;;;;8701:37:15;;;8718:1;;8701:37;;1330:2:32;1315:18;8701:37:15;;;;;;;483:148:27;;:::o;9124:576:15:-;-1:-1:-1;;;;;9207:21:15;;9199:67;;;;-1:-1:-1;;;9199:67:15;;7861:2:32;9199:67:15;;;7843:21:32;7900:2;7880:18;;;7873:30;7939:34;7919:18;;;7912:62;-1:-1:-1;;;7990:18:32;;;7983:31;8031:19;;9199:67:15;7659:397:32;9199:67:15;-1:-1:-1;;;;;9362:18:15;;9337:22;9362:18;;;;;;;;;;;9398:24;;;;9390:71;;;;-1:-1:-1;;;9390:71:15;;8263:2:32;9390:71:15;;;8245:21:32;8302:2;8282:18;;;8275:30;8341:34;8321:18;;;8314:62;-1:-1:-1;;;8392:18:32;;;8385:32;8434:19;;9390:71:15;8061:398:32;9390:71:15;-1:-1:-1;;;;;9495:18:15;;:9;:18;;;;;;;;;;9516:23;;;9495:44;;9559:12;:22;;9533:6;;9495:9;9559:22;;9533:6;;9559:22;:::i;:::-;;;;-1:-1:-1;;9597:37:15;;1342:25:32;;;9623:1:15;;-1:-1:-1;;;;;9597:37:15;;;;;1330:2:32;1315:18;9597:37:15;;;;;;;731:168:27;;;:::o;2270:187:14:-;2362:6;;;-1:-1:-1;;;;;2378:17:14;;;-1:-1:-1;;;;;;2378:17:14;;;;;;;2410:40;;2362:6;;;2378:17;2362:6;;2410:40;;2343:16;;2410:40;2333:124;2270:187;:::o;14:548:32:-;126:4;155:2;184;173:9;166:21;216:6;210:13;259:6;254:2;243:9;239:18;232:34;284:1;294:140;308:6;305:1;302:13;294:140;;;403:14;;;399:23;;393:30;369:17;;;388:2;365:26;358:66;323:10;;294:140;;;298:3;483:1;478:2;469:6;458:9;454:22;450:31;443:42;553:2;546;542:7;537:2;529:6;525:15;521:29;510:9;506:45;502:54;494:62;;;;14:548;;;;:::o;567:173::-;635:20;;-1:-1:-1;;;;;684:31:32;;674:42;;664:70;;730:1;727;720:12;664:70;567:173;;;:::o;745:254::-;813:6;821;874:2;862:9;853:7;849:23;845:32;842:52;;;890:1;887;880:12;842:52;913:29;932:9;913:29;:::i;:::-;903:39;989:2;974:18;;;;961:32;;-1:-1:-1;;;745:254:32:o;1378:328::-;1455:6;1463;1471;1524:2;1512:9;1503:7;1499:23;1495:32;1492:52;;;1540:1;1537;1530:12;1492:52;1563:29;1582:9;1563:29;:::i;:::-;1553:39;;1611:38;1645:2;1634:9;1630:18;1611:38;:::i;:::-;1601:48;;1696:2;1685:9;1681:18;1668:32;1658:42;;1378:328;;;;;:::o;1900:180::-;1959:6;2012:2;2000:9;1991:7;1987:23;1983:32;1980:52;;;2028:1;2025;2018:12;1980:52;-1:-1:-1;2051:23:32;;1900:180;-1:-1:-1;1900:180:32:o;2085:186::-;2144:6;2197:2;2185:9;2176:7;2172:23;2168:32;2165:52;;;2213:1;2210;2203:12;2165:52;2236:29;2255:9;2236:29;:::i;:::-;2226:39;2085:186;-1:-1:-1;;;2085:186:32:o;2484:260::-;2552:6;2560;2613:2;2601:9;2592:7;2588:23;2584:32;2581:52;;;2629:1;2626;2619:12;2581:52;2652:29;2671:9;2652:29;:::i;:::-;2642:39;;2700:38;2734:2;2723:9;2719:18;2700:38;:::i;:::-;2690:48;;2484:260;;;;;:::o;2749:380::-;2828:1;2824:12;;;;2871;;;2892:61;;2946:4;2938:6;2934:17;2924:27;;2892:61;2999:2;2991:6;2988:14;2968:18;2965:38;2962:161;;3045:10;3040:3;3036:20;3033:1;3026:31;3080:4;3077:1;3070:15;3108:4;3105:1;3098:15;2962:161;;2749:380;;;:::o;3134:127::-;3195:10;3190:3;3186:20;3183:1;3176:31;3226:4;3223:1;3216:15;3250:4;3247:1;3240:15;3266:125;3331:9;;;3352:10;;;3349:36;;;3365:18;;:::i;3396:356::-;3598:2;3580:21;;;3617:18;;;3610:30;3676:34;3671:2;3656:18;;3649:62;3743:2;3728:18;;3396:356::o;8464:128::-;8531:9;;;8552:11;;;8549:37;;;8566:18;;:::i",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "allowance(address,address)": "dd62ed3e",
    "approve(address,uint256)": "095ea7b3",
    "balanceOf(address)": "70a08231",
    "burn(uint256)": "42966c68",
    "burnFrom(address,uint256)": "79cc6790",
    "decimals()": "313ce567",
    "decreaseAllowance(address,uint256)": "a457c2d7",
    "increaseAllowance(address,uint256)": "39509351",
    "mint(address,uint256)": "40c10f19",
    "name()": "06fdde03",
    "owner()": "8da5cb5b",
    "renounceOwnership()": "715018a6",
    "symbol()": "95d89b41",
    "totalSupply()": "18160ddd",
    "transfer(address,address,uint256)": "beabacc8",
    "transfer(address,uint256)": "a9059cbb",
    "transferFrom(address,address,uint256)": "23b872dd",
    "transferOwnership(address)": "f2fde38b"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burnFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"burn(uint256)\":{\"details\":\"Destroys `amount` tokens from the caller. See {ERC20-_burn}.\"},\"burnFrom(address,uint256)\":{\"details\":\"Destroys `amount` tokens from `account`, deducting from the caller's allowance. See {ERC20-_burn} and {ERC20-allowance}. Requirements: - the caller must have allowance for ``accounts``'s tokens of at least `amount`.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/mock/USDC.sol\":\"Usdc\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":ds-test/=lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":solmate/=lib/solmate/src/\",\":weird-erc20/=lib/solmate/lib/weird-erc20/src/\"]},\"sources\":{\"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":{\"keccak256\":\"0x24e0364e503a9bbde94c715d26573a76f14cd2a202d45f96f52134ab806b67b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e12cbaa7378fd9b62280e4e1d164bedcb4399ce238f5f98fc0eefb7e50577981\",\"dweb:/ipfs/QmXRoFGUgfsaRkoPT5bxNMtSayKTQ8GZATLPXf69HcRA51\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xdadd41acb749920eccf40aeaa8d291adf9751399a7343561bad13e7a8d99be0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://12af4ac016f9fdf3be5d15824f4292272aa11f6b2e0192a0f7320f5ad49bbbf0\",\"dweb:/ipfs/QmRXMpdqCgA3TYuYxBodqs5p9jGbnMW6xa2gvjppvq4TWk\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xbbc8ac883ac3c0078ce5ad3e288fbb3ffcc8a30c3a98c0fda0114d64fc44fca2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87a7a5d2f6f63f84598af02b8c50ca2df2631cb8ba2453e8d95fcb17e4be9824\",\"dweb:/ipfs/QmR76hqtAcRqoFj33tmNjcWTLrgNsAaakYwnKZ8zoJtKei\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/ERC20Burnable.sol\":{\"keccak256\":\"0x0d19410453cda55960a818e02bd7c18952a5c8fe7a3036e81f0d599f34487a7b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4c0f62d3d5bef22b5ca00cc3903e7de6152cb68d2d22401a463f373cda54c00f\",\"dweb:/ipfs/QmSfzjZux7LC7NW2f7rjCXTHeFMUCWERqDkhpCTBy7kxTe\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"lib/openzeppelin-contracts/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"src/Interfaces/IUSDC.sol\":{\"keccak256\":\"0x558f61d8e317edefc9b178c6ef66e9b87698f114aba2248137c5f8950875eed2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ab0ec951c21610c5247680e394e1b0ec7a9c67d7b1c1fad897afddb97e0b28f4\",\"dweb:/ipfs/QmdMnEn31pndnkNxG4QR8rpamuL1Ci5dnYBjSteMFRXwtU\"]},\"src/mock/USDC.sol\":{\"keccak256\":\"0x1d750e820ca28d4fd0ab00725be2d0b2921e867049f8f6815391f459354855bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://efe840311835818ba7078e052cc7fe5d0dca5c5ff974b8c7fc2d1bf0d89f118e\",\"dweb:/ipfs/QmVkxeYvSBE6LNqm8vp1NHFn4LjTzp7SjyjKDAMnpYiNZq\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.17+commit.8df45f5f"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "spender",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Approval",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "previousOwner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "OwnershipTransferred",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Transfer",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "allowance",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "approve",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "balanceOf",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "burn"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "burnFrom"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "decimals",
          "outputs": [
            {
              "internalType": "uint8",
              "name": "",
              "type": "uint8"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "subtractedValue",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "decreaseAllowance",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "addedValue",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "increaseAllowance",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "mint"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "name",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "owner",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "renounceOwnership"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "symbol",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "totalSupply",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transfer",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transfer"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferFrom",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferOwnership"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "allowance(address,address)": {
            "details": "See {IERC20-allowance}."
          },
          "approve(address,uint256)": {
            "details": "See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
          },
          "balanceOf(address)": {
            "details": "See {IERC20-balanceOf}."
          },
          "burn(uint256)": {
            "details": "Destroys `amount` tokens from the caller. See {ERC20-_burn}."
          },
          "burnFrom(address,uint256)": {
            "details": "Destroys `amount` tokens from `account`, deducting from the caller's allowance. See {ERC20-_burn} and {ERC20-allowance}. Requirements: - the caller must have allowance for ``accounts``'s tokens of at least `amount`."
          },
          "decimals()": {
            "details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
          },
          "decreaseAllowance(address,uint256)": {
            "details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
          },
          "increaseAllowance(address,uint256)": {
            "details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
          },
          "name()": {
            "details": "Returns the name of the token."
          },
          "owner()": {
            "details": "Returns the address of the current owner."
          },
          "renounceOwnership()": {
            "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
          },
          "symbol()": {
            "details": "Returns the symbol of the token, usually a shorter version of the name."
          },
          "totalSupply()": {
            "details": "See {IERC20-totalSupply}."
          },
          "transfer(address,uint256)": {
            "details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`."
          },
          "transferFrom(address,address,uint256)": {
            "details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`."
          },
          "transferOwnership(address)": {
            "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {},
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":ds-test/=lib/ds-test/src/",
        ":forge-std/=lib/forge-std/src/",
        ":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/",
        ":openzeppelin-contracts/=lib/openzeppelin-contracts/",
        ":solmate/=lib/solmate/src/",
        ":weird-erc20/=lib/solmate/lib/weird-erc20/src/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "src/mock/USDC.sol": "Usdc"
      },
      "libraries": {}
    },
    "sources": {
      "lib/openzeppelin-contracts/contracts/access/Ownable.sol": {
        "keccak256": "0x24e0364e503a9bbde94c715d26573a76f14cd2a202d45f96f52134ab806b67b9",
        "urls": [
          "bzz-raw://e12cbaa7378fd9b62280e4e1d164bedcb4399ce238f5f98fc0eefb7e50577981",
          "dweb:/ipfs/QmXRoFGUgfsaRkoPT5bxNMtSayKTQ8GZATLPXf69HcRA51"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol": {
        "keccak256": "0xdadd41acb749920eccf40aeaa8d291adf9751399a7343561bad13e7a8d99be0b",
        "urls": [
          "bzz-raw://12af4ac016f9fdf3be5d15824f4292272aa11f6b2e0192a0f7320f5ad49bbbf0",
          "dweb:/ipfs/QmRXMpdqCgA3TYuYxBodqs5p9jGbnMW6xa2gvjppvq4TWk"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol": {
        "keccak256": "0xbbc8ac883ac3c0078ce5ad3e288fbb3ffcc8a30c3a98c0fda0114d64fc44fca2",
        "urls": [
          "bzz-raw://87a7a5d2f6f63f84598af02b8c50ca2df2631cb8ba2453e8d95fcb17e4be9824",
          "dweb:/ipfs/QmR76hqtAcRqoFj33tmNjcWTLrgNsAaakYwnKZ8zoJtKei"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/ERC20Burnable.sol": {
        "keccak256": "0x0d19410453cda55960a818e02bd7c18952a5c8fe7a3036e81f0d599f34487a7b",
        "urls": [
          "bzz-raw://4c0f62d3d5bef22b5ca00cc3903e7de6152cb68d2d22401a463f373cda54c00f",
          "dweb:/ipfs/QmSfzjZux7LC7NW2f7rjCXTHeFMUCWERqDkhpCTBy7kxTe"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
        "keccak256": "0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca",
        "urls": [
          "bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd",
          "dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Context.sol": {
        "keccak256": "0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7",
        "urls": [
          "bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92",
          "dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3"
        ],
        "license": "MIT"
      },
      "src/Interfaces/IUSDC.sol": {
        "keccak256": "0x558f61d8e317edefc9b178c6ef66e9b87698f114aba2248137c5f8950875eed2",
        "urls": [
          "bzz-raw://ab0ec951c21610c5247680e394e1b0ec7a9c67d7b1c1fad897afddb97e0b28f4",
          "dweb:/ipfs/QmdMnEn31pndnkNxG4QR8rpamuL1Ci5dnYBjSteMFRXwtU"
        ],
        "license": "MIT"
      },
      "src/mock/USDC.sol": {
        "keccak256": "0x1d750e820ca28d4fd0ab00725be2d0b2921e867049f8f6815391f459354855bb",
        "urls": [
          "bzz-raw://efe840311835818ba7078e052cc7fe5d0dca5c5ff974b8c7fc2d1bf0d89f118e",
          "dweb:/ipfs/QmVkxeYvSBE6LNqm8vp1NHFn4LjTzp7SjyjKDAMnpYiNZq"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "src/mock/USDC.sol",
    "id": 7179,
    "exportedSymbols": {
      "Context": [
        5582
      ],
      "ERC20": [
        5413
      ],
      "ERC20Burnable": [
        5535
      ],
      "IERC20": [
        5491
      ],
      "IERC20Metadata": [
        5560
      ],
      "IUSDC": [
        5963
      ],
      "Ownable": [
        4825
      ],
      "Usdc": [
        7178
      ]
    },
    "nodeType": "SourceUnit",
    "src": "32:871:27",
    "nodes": [
      {
        "id": 7087,
        "nodeType": "PragmaDirective",
        "src": "32:24:27",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".14"
        ]
      },
      {
        "id": 7088,
        "nodeType": "ImportDirective",
        "src": "58:69:27",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol",
        "file": "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 7179,
        "sourceUnit": 5492,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 7089,
        "nodeType": "ImportDirective",
        "src": "128:87:27",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/ERC20Burnable.sol",
        "file": "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/ERC20Burnable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 7179,
        "sourceUnit": 5536,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 7090,
        "nodeType": "ImportDirective",
        "src": "216:65:27",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts/contracts/access/Ownable.sol",
        "file": "lib/openzeppelin-contracts/contracts/access/Ownable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 7179,
        "sourceUnit": 4826,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 7091,
        "nodeType": "ImportDirective",
        "src": "282:33:27",
        "nodes": [],
        "absolutePath": "src/Interfaces/IUSDC.sol",
        "file": "../Interfaces/IUSDC.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 7179,
        "sourceUnit": 5964,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 7178,
        "nodeType": "ContractDefinition",
        "src": "317:586:27",
        "nodes": [
          {
            "id": 7116,
            "nodeType": "FunctionDefinition",
            "src": "370:107:27",
            "nodes": [],
            "body": {
              "id": 7115,
              "nodeType": "Block",
              "src": "406:71:27",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 7105,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "431:3:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 7106,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "435:6:27",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "431:10:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        },
                        "id": 7112,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_rational_100000000_by_1",
                            "typeString": "int_const 100000000"
                          },
                          "id": 7109,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "leftExpression": {
                            "hexValue": "3130303030303030",
                            "id": 7107,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "443:8:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_10000000_by_1",
                              "typeString": "int_const 10000000"
                            },
                            "value": "10000000"
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "hexValue": "3130",
                            "id": 7108,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "454:2:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_10_by_1",
                              "typeString": "int_const 10"
                            },
                            "value": "10"
                          },
                          "src": "443:13:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_100000000_by_1",
                            "typeString": "int_const 100000000"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "*",
                        "rightExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 7110,
                            "name": "decimals",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              7151
                            ],
                            "referencedDeclaration": 7151,
                            "src": "459:8:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_uint8_$",
                              "typeString": "function () view returns (uint8)"
                            }
                          },
                          "id": 7111,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "459:10:27",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "src": "443:26:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      ],
                      "id": 7104,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5230,
                      "src": "425:5:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 7113,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "425:45:27",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7114,
                  "nodeType": "ExpressionStatement",
                  "src": "425:45:27"
                }
              ]
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "hexValue": "55534443",
                    "id": 7100,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "390:6:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_d6aca1be9729c13d677335161321649cccae6a591554772516700f986f942eaa",
                      "typeString": "literal_string \"USDC\""
                    },
                    "value": "USDC"
                  },
                  {
                    "hexValue": "55534443",
                    "id": 7101,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "398:6:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_d6aca1be9729c13d677335161321649cccae6a591554772516700f986f942eaa",
                      "typeString": "literal_string \"USDC\""
                    },
                    "value": "USDC"
                  }
                ],
                "id": 7102,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 7099,
                  "name": "ERC20",
                  "nameLocations": [
                    "384:5:27"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 5413,
                  "src": "384:5:27"
                },
                "nodeType": "ModifierInvocation",
                "src": "384:21:27"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 7098,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "381:2:27"
            },
            "returnParameters": {
              "id": 7103,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "406:0:27"
            },
            "scope": 7178,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 7141,
            "nodeType": "FunctionDefinition",
            "src": "483:148:27",
            "nodes": [],
            "body": {
              "id": 7140,
              "nodeType": "Block",
              "src": "544:87:27",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 7131,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 7126,
                          "name": "to",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7118,
                          "src": "562:2:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 7129,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "574:1:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 7128,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "566:7:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 7127,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "566:7:27",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 7130,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "566:10:27",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "562:14:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5a65726f20616464726573732073656e74",
                        "id": 7132,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "577:19:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_027163101f94845cee82b5c72cb2ad3aa8407e9ef8e40b33c07108e4d8d9fd1f",
                          "typeString": "literal_string \"Zero address sent\""
                        },
                        "value": "Zero address sent"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_027163101f94845cee82b5c72cb2ad3aa8407e9ef8e40b33c07108e4d8d9fd1f",
                          "typeString": "literal_string \"Zero address sent\""
                        }
                      ],
                      "id": 7125,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "554:7:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 7133,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "554:43:27",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7134,
                  "nodeType": "ExpressionStatement",
                  "src": "554:43:27"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 7136,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7118,
                        "src": "613:2:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 7137,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7120,
                        "src": "617:6:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 7135,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5230,
                      "src": "607:5:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 7138,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "607:17:27",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7139,
                  "nodeType": "ExpressionStatement",
                  "src": "607:17:27"
                }
              ]
            },
            "functionSelector": "40c10f19",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 7123,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 7122,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "534:9:27"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 4767,
                  "src": "534:9:27"
                },
                "nodeType": "ModifierInvocation",
                "src": "534:9:27"
              }
            ],
            "name": "mint",
            "nameLocation": "492:4:27",
            "parameters": {
              "id": 7121,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7118,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "505:2:27",
                  "nodeType": "VariableDeclaration",
                  "scope": 7141,
                  "src": "497:10:27",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7117,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "497:7:27",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7120,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "517:6:27",
                  "nodeType": "VariableDeclaration",
                  "scope": 7141,
                  "src": "509:14:27",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7119,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "509:7:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "496:28:27"
            },
            "returnParameters": {
              "id": 7124,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "544:0:27"
            },
            "scope": 7178,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 7151,
            "nodeType": "FunctionDefinition",
            "src": "636:89:27",
            "nodes": [],
            "body": {
              "id": 7150,
              "nodeType": "Block",
              "src": "708:17:27",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "hexValue": "3138",
                    "id": 7148,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "719:2:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_18_by_1",
                      "typeString": "int_const 18"
                    },
                    "value": "18"
                  },
                  "functionReturnParameters": 7147,
                  "id": 7149,
                  "nodeType": "Return",
                  "src": "712:9:27"
                }
              ]
            },
            "baseFunctions": [
              4900
            ],
            "functionSelector": "313ce567",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "decimals",
            "nameLocation": "645:8:27",
            "overrides": {
              "id": 7144,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 7143,
                  "name": "ERC20",
                  "nameLocations": [
                    "685:5:27"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 5413,
                  "src": "685:5:27"
                }
              ],
              "src": "676:15:27"
            },
            "parameters": {
              "id": 7142,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "653:2:27"
            },
            "returnParameters": {
              "id": 7147,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7146,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 7151,
                  "src": "701:5:27",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 7145,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "701:5:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "700:7:27"
            },
            "scope": 7178,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "id": 7177,
            "nodeType": "FunctionDefinition",
            "src": "731:168:27",
            "nodes": [],
            "body": {
              "id": 7176,
              "nodeType": "Block",
              "src": "802:97:27",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 7166,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 7161,
                          "name": "to",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7155,
                          "src": "820:2:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 7164,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "832:1:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 7163,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "824:7:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 7162,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "824:7:27",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 7165,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "824:10:27",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "820:14:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5a65726f20616464726573732073656e74",
                        "id": 7167,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "835:19:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_027163101f94845cee82b5c72cb2ad3aa8407e9ef8e40b33c07108e4d8d9fd1f",
                          "typeString": "literal_string \"Zero address sent\""
                        },
                        "value": "Zero address sent"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_027163101f94845cee82b5c72cb2ad3aa8407e9ef8e40b33c07108e4d8d9fd1f",
                          "typeString": "literal_string \"Zero address sent\""
                        }
                      ],
                      "id": 7160,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "812:7:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 7168,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "812:43:27",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7169,
                  "nodeType": "ExpressionStatement",
                  "src": "812:43:27"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 7171,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7153,
                        "src": "875:4:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 7172,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7155,
                        "src": "880:2:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 7173,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7157,
                        "src": "884:7:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 7170,
                      "name": "_transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5174,
                      "src": "865:9:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 7174,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "865:27:27",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7175,
                  "nodeType": "ExpressionStatement",
                  "src": "865:27:27"
                }
              ]
            },
            "functionSelector": "beabacc8",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "transfer",
            "nameLocation": "740:8:27",
            "parameters": {
              "id": 7158,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7153,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "757:4:27",
                  "nodeType": "VariableDeclaration",
                  "scope": 7177,
                  "src": "749:12:27",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7152,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "749:7:27",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7155,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "771:2:27",
                  "nodeType": "VariableDeclaration",
                  "scope": 7177,
                  "src": "763:10:27",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7154,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "763:7:27",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7157,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "784:7:27",
                  "nodeType": "VariableDeclaration",
                  "scope": 7177,
                  "src": "776:15:27",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7156,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "776:7:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "748:44:27"
            },
            "returnParameters": {
              "id": 7159,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "802:0:27"
            },
            "scope": 7178,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 7092,
              "name": "IERC20",
              "nameLocations": [
                "334:6:27"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 5491,
              "src": "334:6:27"
            },
            "id": 7093,
            "nodeType": "InheritanceSpecifier",
            "src": "334:6:27"
          },
          {
            "baseName": {
              "id": 7094,
              "name": "ERC20Burnable",
              "nameLocations": [
                "342:13:27"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 5535,
              "src": "342:13:27"
            },
            "id": 7095,
            "nodeType": "InheritanceSpecifier",
            "src": "342:13:27"
          },
          {
            "baseName": {
              "id": 7096,
              "name": "Ownable",
              "nameLocations": [
                "357:7:27"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 4825,
              "src": "357:7:27"
            },
            "id": 7097,
            "nodeType": "InheritanceSpecifier",
            "src": "357:7:27"
          }
        ],
        "canonicalName": "Usdc",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          7178,
          4825,
          5535,
          5413,
          5560,
          5491,
          5582
        ],
        "name": "Usdc",
        "nameLocation": "326:4:27",
        "scope": 7179,
        "usedErrors": []
      }
    ],
    "license": "MIT"
  },
  "id": 27
}