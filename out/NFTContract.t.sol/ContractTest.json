{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "log_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "log_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "log_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "int256",
          "name": "",
          "type": "int256"
        }
      ],
      "name": "log_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "val",
          "type": "address"
        }
      ],
      "name": "log_named_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "val",
          "type": "bytes"
        }
      ],
      "name": "log_named_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "val",
          "type": "bytes32"
        }
      ],
      "name": "log_named_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        }
      ],
      "name": "log_named_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "val",
          "type": "string"
        }
      ],
      "name": "log_named_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        }
      ],
      "name": "log_named_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "log_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "logs",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "IS_TEST",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "failed",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "setUp",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testExample",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x60a06040526000805460ff19166001179055737109709ecfa91a80626ff3989d68f67f5b1dd12d60805234801561003557600080fd5b50608051610d5b61005f600039600081816101cd015281816102bd01526103380152610d5b6000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c80630a9254e4146100515780633f5a4a2a1461005b578063ba414fa614610063578063fa7626d414610089575b600080fd5b610059610096565b005b610059610169565b60005461007590610100900460ff1681565b604051901515815260200160405180910390f35b6000546100759060ff1681565b6040516100a29061063a565b604051809103906000f0801580156100be573d6000803e3d6000fd5b506000805462010000600160b01b031916620100006001600160a01b039384168102919091179182905560405163792e11f560e01b81526005600482015291049091169063792e11f5906024016000604051808303816000875af115801561012a573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261015291908101906106f3565b805161016691600191602090910190610647565b50565b6000600160008154811061017f5761017f6107b8565b600091825260209091200154604080516318caf8e360e31b81526001600160a01b039283166004820181905260248201929092526005604482015264416c69636560d81b60648201529092507f00000000000000000000000000000000000000000000000000000000000000009091169063c657c71890608401600060405180830381600087803b15801561021357600080fd5b505af1158015610227573d6000803e3d6000fd5b5050505061025c6040518060400160405280600f81526020016e616c6963652773206164647265737360881b81525082610420565b600060018081548110610271576102716107b8565b600091825260209091200154604080516318caf8e360e31b81526001600160a01b0392831660048201819052602482019290925260036044820152622137b160e91b60648201529092507f00000000000000000000000000000000000000000000000000000000000000009091169063c657c71890608401600060405180830381600087803b15801561030357600080fd5b505af1158015610317573d6000803e3d6000fd5b505060405163ca669fa760e01b81526001600160a01b0385811660048301527f000000000000000000000000000000000000000000000000000000000000000016925063ca669fa79150602401600060405180830381600087803b15801561037e57600080fd5b505af1158015610392573d6000803e3d6000fd5b505050506000816001600160a01b0316678ac7230489e8000060405160006040518083038185875af1925050503d80600081146103eb576040519150601f19603f3d011682016040523d82523d6000602084013e6103f0565b606091505b505090506103fd81610469565b61041b826001600160a01b031631846001600160a01b0316316104e9565b505050565b61046582826040516024016104369291906107ce565b60408051601f198184030181529190526020810180516001600160e01b031663319af33360e01b179052610619565b5050565b80610166577f41304facd9323d75b11bcdd609cb38effffdb05710f7caf0e9b16c6d9d709f506040516104cd9060208082526017908201527f4572726f723a20417373657274696f6e204661696c6564000000000000000000604082015260600190565b60405180910390a16101666000805461ff001916610100179055565b808211610465577f41304facd9323d75b11bcdd609cb38effffdb05710f7caf0e9b16c6d9d709f506040516105599060208082526021908201527f4572726f723a2061203e2062206e6f7420736174697366696564205b75696e746040820152605d60f81b606082015260800190565b60405180910390a16040805181815260098183015268202056616c7565206160b81b60608201526020810184905290517fb2de2fbe801a0df6c0cbddfd448ba3c41d48a040ca35c56c8196ef0fcae721a89181900360800190a1604080518181526009818301526810102b30b63ab2903160b91b60608201526020810183905290517fb2de2fbe801a0df6c0cbddfd448ba3c41d48a040ca35c56c8196ef0fcae721a89181900360800190a16104656000805461ff001916610100179055565b80516a636f6e736f6c652e6c6f67602083016000808483855afa5050505050565b6104f78061082f83390190565b82805482825590600052602060002090810192821561069c579160200282015b8281111561069c57825182546001600160a01b0319166001600160a01b03909116178255602090920191600190910190610667565b506106a89291506106ac565b5090565b5b808211156106a857600081556001016106ad565b634e487b7160e01b600052604160045260246000fd5b80516001600160a01b03811681146106ee57600080fd5b919050565b6000602080838503121561070657600080fd5b825167ffffffffffffffff8082111561071e57600080fd5b818501915085601f83011261073257600080fd5b815181811115610744576107446106c1565b8060051b604051601f19603f83011681018181108582111715610769576107696106c1565b60405291825284820192508381018501918883111561078757600080fd5b938501935b828510156107ac5761079d856106d7565b8452938501939285019261078c565b98975050505050505050565b634e487b7160e01b600052603260045260246000fd5b604081526000835180604084015260005b818110156107fc57602081870181015160608684010152016107df565b50600060608285018101919091526001600160a01b03949094166020840152601f01601f19169091019091019291505056fe6000805460ff19166001908117909155737109709ecfa91a80626ff3989d68f67f5b1dd12d6080526b75736572206164647265737360a01b60c052600c60a05260cc6040527ffadd6953a0436e85528ded789af2e2b7e57c1cd7c68c5c3796d8ea67e0018db7905534801561007357600080fd5b50608051610461610096600039600081816101f101526102b901526104616000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c8063792e11f51461005c578063b90a68fa14610085578063ba414fa6146100c2578063f82de7b0146100e4578063fa7626d4146100f9575b600080fd5b61006f61006a366004610321565b610106565b60405161007c919061033a565b60405180910390f35b600180546040805160208082018490528251808303820181528284019384905280519101209093556001600160a01b03909116905260600161007c565b6000546100d490610100900460ff1681565b604051901515815260200161007c565b6100f76100f2366004610321565b610294565b005b6000546100d49060ff1681565b606060008267ffffffffffffffff81111561012357610123610387565b60405190808252806020026020018201604052801561014c578160200160208202803683370190505b50905060005b8381101561028d576000306001600160a01b031663b90a68fa6040518163ffffffff1660e01b81526004016020604051808303816000875af115801561019c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101c0919061039d565b60405163c88a5e6d60e01b81526001600160a01b03808316600483015268056bc75e2d6310000060248301529192507f00000000000000000000000000000000000000000000000000000000000000009091169063c88a5e6d90604401600060405180830381600087803b15801561023757600080fd5b505af115801561024b573d6000803e3d6000fd5b5050505080838381518110610262576102626103cd565b6001600160a01b03909216602092830291909101909101525080610285816103f9565b915050610152565b5092915050565b60006102a08243610412565b6040516301f7b4f360e41b8152600481018290529091507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690631f7b4f3090602401600060405180830381600087803b15801561030557600080fd5b505af1158015610319573d6000803e3d6000fd5b505050505050565b60006020828403121561033357600080fd5b5035919050565b6020808252825182820181905260009190848201906040850190845b8181101561037b5783516001600160a01b031683529284019291840191600101610356565b50909695505050505050565b634e487b7160e01b600052604160045260246000fd5b6000602082840312156103af57600080fd5b81516001600160a01b03811681146103c657600080fd5b9392505050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b60006001820161040b5761040b6103e3565b5060010190565b80820180821115610425576104256103e3565b9291505056fea26469706673582212207bee3216136563dbb12b053e94e8ebbad02fd6782b38edc1cc69e29be58d963264736f6c63430008110033a2646970667358221220fe7a4ac636d46f95fc9a00fed2ba6aedf82c0f0395d73a43fabad2f1001d1c9064736f6c63430008110033",
    "sourceMap": "237:722:2:-:0;;;1573:26:0;;;-1:-1:-1;;1573:26:0;1595:4;1573:26;;;1670:64;275:43:2;;237:722;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561001057600080fd5b506004361061004c5760003560e01c80630a9254e4146100515780633f5a4a2a1461005b578063ba414fa614610063578063fa7626d414610089575b600080fd5b610059610096565b005b610059610169565b60005461007590610100900460ff1681565b604051901515815260200160405180910390f35b6000546100759060ff1681565b6040516100a29061063a565b604051809103906000f0801580156100be573d6000803e3d6000fd5b506000805462010000600160b01b031916620100006001600160a01b039384168102919091179182905560405163792e11f560e01b81526005600482015291049091169063792e11f5906024016000604051808303816000875af115801561012a573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261015291908101906106f3565b805161016691600191602090910190610647565b50565b6000600160008154811061017f5761017f6107b8565b600091825260209091200154604080516318caf8e360e31b81526001600160a01b039283166004820181905260248201929092526005604482015264416c69636560d81b60648201529092507f00000000000000000000000000000000000000000000000000000000000000009091169063c657c71890608401600060405180830381600087803b15801561021357600080fd5b505af1158015610227573d6000803e3d6000fd5b5050505061025c6040518060400160405280600f81526020016e616c6963652773206164647265737360881b81525082610420565b600060018081548110610271576102716107b8565b600091825260209091200154604080516318caf8e360e31b81526001600160a01b0392831660048201819052602482019290925260036044820152622137b160e91b60648201529092507f00000000000000000000000000000000000000000000000000000000000000009091169063c657c71890608401600060405180830381600087803b15801561030357600080fd5b505af1158015610317573d6000803e3d6000fd5b505060405163ca669fa760e01b81526001600160a01b0385811660048301527f000000000000000000000000000000000000000000000000000000000000000016925063ca669fa79150602401600060405180830381600087803b15801561037e57600080fd5b505af1158015610392573d6000803e3d6000fd5b505050506000816001600160a01b0316678ac7230489e8000060405160006040518083038185875af1925050503d80600081146103eb576040519150601f19603f3d011682016040523d82523d6000602084013e6103f0565b606091505b505090506103fd81610469565b61041b826001600160a01b031631846001600160a01b0316316104e9565b505050565b61046582826040516024016104369291906107ce565b60408051601f198184030181529190526020810180516001600160e01b031663319af33360e01b179052610619565b5050565b80610166577f41304facd9323d75b11bcdd609cb38effffdb05710f7caf0e9b16c6d9d709f506040516104cd9060208082526017908201527f4572726f723a20417373657274696f6e204661696c6564000000000000000000604082015260600190565b60405180910390a16101666000805461ff001916610100179055565b808211610465577f41304facd9323d75b11bcdd609cb38effffdb05710f7caf0e9b16c6d9d709f506040516105599060208082526021908201527f4572726f723a2061203e2062206e6f7420736174697366696564205b75696e746040820152605d60f81b606082015260800190565b60405180910390a16040805181815260098183015268202056616c7565206160b81b60608201526020810184905290517fb2de2fbe801a0df6c0cbddfd448ba3c41d48a040ca35c56c8196ef0fcae721a89181900360800190a1604080518181526009818301526810102b30b63ab2903160b91b60608201526020810183905290517fb2de2fbe801a0df6c0cbddfd448ba3c41d48a040ca35c56c8196ef0fcae721a89181900360800190a16104656000805461ff001916610100179055565b80516a636f6e736f6c652e6c6f67602083016000808483855afa5050505050565b6104f78061082f83390190565b82805482825590600052602060002090810192821561069c579160200282015b8281111561069c57825182546001600160a01b0319166001600160a01b03909116178255602090920191600190910190610667565b506106a89291506106ac565b5090565b5b808211156106a857600081556001016106ad565b634e487b7160e01b600052604160045260246000fd5b80516001600160a01b03811681146106ee57600080fd5b919050565b6000602080838503121561070657600080fd5b825167ffffffffffffffff8082111561071e57600080fd5b818501915085601f83011261073257600080fd5b815181811115610744576107446106c1565b8060051b604051601f19603f83011681018181108582111715610769576107696106c1565b60405291825284820192508381018501918883111561078757600080fd5b938501935b828510156107ac5761079d856106d7565b8452938501939285019261078c565b98975050505050505050565b634e487b7160e01b600052603260045260246000fd5b604081526000835180604084015260005b818110156107fc57602081870181015160608684010152016107df565b50600060608285018101919091526001600160a01b03949094166020840152601f01601f19169091019091019291505056fe6000805460ff19166001908117909155737109709ecfa91a80626ff3989d68f67f5b1dd12d6080526b75736572206164647265737360a01b60c052600c60a05260cc6040527ffadd6953a0436e85528ded789af2e2b7e57c1cd7c68c5c3796d8ea67e0018db7905534801561007357600080fd5b50608051610461610096600039600081816101f101526102b901526104616000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c8063792e11f51461005c578063b90a68fa14610085578063ba414fa6146100c2578063f82de7b0146100e4578063fa7626d4146100f9575b600080fd5b61006f61006a366004610321565b610106565b60405161007c919061033a565b60405180910390f35b600180546040805160208082018490528251808303820181528284019384905280519101209093556001600160a01b03909116905260600161007c565b6000546100d490610100900460ff1681565b604051901515815260200161007c565b6100f76100f2366004610321565b610294565b005b6000546100d49060ff1681565b606060008267ffffffffffffffff81111561012357610123610387565b60405190808252806020026020018201604052801561014c578160200160208202803683370190505b50905060005b8381101561028d576000306001600160a01b031663b90a68fa6040518163ffffffff1660e01b81526004016020604051808303816000875af115801561019c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101c0919061039d565b60405163c88a5e6d60e01b81526001600160a01b03808316600483015268056bc75e2d6310000060248301529192507f00000000000000000000000000000000000000000000000000000000000000009091169063c88a5e6d90604401600060405180830381600087803b15801561023757600080fd5b505af115801561024b573d6000803e3d6000fd5b5050505080838381518110610262576102626103cd565b6001600160a01b03909216602092830291909101909101525080610285816103f9565b915050610152565b5092915050565b60006102a08243610412565b6040516301f7b4f360e41b8152600481018290529091507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690631f7b4f3090602401600060405180830381600087803b15801561030557600080fd5b505af1158015610319573d6000803e3d6000fd5b505050505050565b60006020828403121561033357600080fd5b5035919050565b6020808252825182820181905260009190848201906040850190845b8181101561037b5783516001600160a01b031683529284019291840191600101610356565b50909695505050505050565b634e487b7160e01b600052604160045260246000fd5b6000602082840312156103af57600080fd5b81516001600160a01b03811681146103c657600080fd5b9392505050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b60006001820161040b5761040b6103e3565b5060010190565b80820180821115610425576104256103e3565b9291505056fea26469706673582212207bee3216136563dbb12b053e94e8ebbad02fd6782b38edc1cc69e29be58d963264736f6c63430008110033a2646970667358221220fe7a4ac636d46f95fc9a00fed2ba6aedf82c0f0395d73a43fabad2f1001d1c9064736f6c63430008110033",
    "sourceMap": "237:722:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;394:102;;;:::i;:::-;;502:455;;;:::i;1605:18:0:-;;;;;;;;;;;;;;;179:14:5;;172:22;154:41;;142:2;127:18;1605::0;;;;;;;1573:26;;;;;;;;;394:102:2;436:15;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;428:5:2;:23;;-1:-1:-1;;;;;;428:23:2;;-1:-1:-1;;;;;428:23:2;;;;;;;;;;;;;469:20;;-1:-1:-1;;;469:20:2;;487:1;469:20;;;360:25:5;469:5:2;;;;;;:17;;333:18:5;;469:20:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;469:20:2;;;;;;;;;;;;:::i;:::-;461:28;;;;:5;;:28;;;;;;:::i;:::-;;394:102::o;502:455::-;542:21;566:5;572:1;566:8;;;;;;;;:::i;:::-;;;;;;;;;;;656:24;;;-1:-1:-1;;;656:24:2;;-1:-1:-1;;;;;566:8:2;;;656:24;;;2220:51:5;;;2287:18;;;2280:30;;;;2346:1;2326:18;;;2319:29;-1:-1:-1;;;2364:18:5;;;2357:35;566:8:2;;-1:-1:-1;656:2:2;:8;;;;;;2409:19:5;;656:24:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;690:37;;;;;;;;;;;;;;-1:-1:-1;;;690:37:2;;;721:5;690:11;:37::i;:::-;737:19;759:5;765:1;759:8;;;;;;;;:::i;:::-;;;;;;;;;;;777:20;;;-1:-1:-1;;;777:20:2;;-1:-1:-1;;;;;759:8:2;;;777:20;;;2659:51:5;;;2726:18;;;2719:30;;;;2785:1;2765:18;;;2758:29;-1:-1:-1;;;2803:18:5;;;2796:33;759:8:2;;-1:-1:-1;777:2:2;:8;;;;;;2846:19:5;;777:20:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;808:15:2;;-1:-1:-1;;;808:15:2;;-1:-1:-1;;;;;3048:32:5;;;808:15:2;;;3030:51:5;808:2:2;:8;;-1:-1:-1;808:8:2;;-1:-1:-1;3003:18:5;;808:15:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;834:9;849:3;-1:-1:-1;;;;;849:8:2;865;849:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;833:45;;;888:16;899:4;888:10;:16::i;:::-;914:36;923:3;-1:-1:-1;;;;;923:11:2;;936:5;-1:-1:-1;;;;;936:13:2;;914:8;:36::i;:::-;532:425;;;502:455::o;8349:145:3:-;8416:71;8479:2;8483;8432:54;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;8432:54:3;;;;;;;;;;;;;;-1:-1:-1;;;;;8432:54:3;-1:-1:-1;;;8432:54:3;;;8416:15;:71::i;:::-;8349:145;;:::o;2046:157:0:-;2106:9;2101:96;;2136:30;;;;;4139:2:5;4121:21;;;4178:2;4158:18;;;4151:30;4217:25;4212:2;4197:18;;4190:53;4275:2;4260:18;;3937:347;2136:30:0;;;;;;;;2180:6;1853;:13;;-1:-1:-1;;1853:13:0;;;;;1818:55;5547:259;5609:1;5604;:6;5600:200;;5631:40;;;;;4491:2:5;4473:21;;;4530:2;4510:18;;;4503:30;4569:34;4564:2;4549:18;;4542:62;-1:-1:-1;;;4635:2:5;4620:18;;4613:31;4676:3;4661:19;;4289:397;5631:40:0;;;;;;;;5690:30;;;4903:21:5;;;4960:1;4940:18;;;4933:29;-1:-1:-1;;;4993:2:5;4978:18;;4971:39;5077:4;5062:20;;5055:36;;;5690:30:0;;;;;;;5042:3:5;5690:30:0;;;5739;;;5314:21:5;;;5371:1;5351:18;;;5344:29;-1:-1:-1;;;5404:2:5;5389:18;;5382:39;5488:4;5473:20;;5466:36;;;5739:30:0;;;;;;;5453:3:5;5739:30:0;;;5783:6;1853;:13;;-1:-1:-1;;1853:13:0;;;;;1818:55;203:443:3;297:14;;153:42;427:2;414:16;;273:21;;297:14;414:16;153:42;480:5;452:178;443:187;;380:260;;203:443;:::o;-1:-1:-1:-;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;396:127:5;457:10;452:3;448:20;445:1;438:31;488:4;485:1;478:15;512:4;509:1;502:15;528:185;615:13;;-1:-1:-1;;;;;657:31:5;;647:42;;637:70;;703:1;700;693:12;637:70;528:185;;;:::o;718:1145::-;821:6;852:2;895;883:9;874:7;870:23;866:32;863:52;;;911:1;908;901:12;863:52;944:9;938:16;973:18;1014:2;1006:6;1003:14;1000:34;;;1030:1;1027;1020:12;1000:34;1068:6;1057:9;1053:22;1043:32;;1113:7;1106:4;1102:2;1098:13;1094:27;1084:55;;1135:1;1132;1125:12;1084:55;1164:2;1158:9;1186:2;1182;1179:10;1176:36;;;1192:18;;:::i;:::-;1238:2;1235:1;1231:10;1270:2;1264:9;1333:2;1329:7;1324:2;1320;1316:11;1312:25;1304:6;1300:38;1388:6;1376:10;1373:22;1368:2;1356:10;1353:18;1350:46;1347:72;;;1399:18;;:::i;:::-;1435:2;1428:22;1485:18;;;1519:15;;;;-1:-1:-1;1561:11:5;;;1557:20;;;1589:19;;;1586:39;;;1621:1;1618;1611:12;1586:39;1645:11;;;;1665:167;1681:6;1676:3;1673:15;1665:167;;;1747:42;1785:3;1747:42;:::i;:::-;1735:55;;1698:12;;;;1810;;;;1665:167;;;1851:6;718:1145;-1:-1:-1;;;;;;;;718:1145:5:o;1868:127::-;1929:10;1924:3;1920:20;1917:1;1910:31;1960:4;1957:1;1950:15;1984:4;1981:1;1974:15;3302:630;3479:2;3468:9;3461:21;3442:4;3511:6;3505:13;3554:6;3549:2;3538:9;3534:18;3527:34;3579:1;3589:144;3603:6;3600:1;3597:13;3589:144;;;3716:4;3700:14;;;3696:25;;3690:32;3685:2;3666:17;;;3662:26;3655:68;3618:12;3589:144;;;-1:-1:-1;3782:1:5;3777:2;3753:22;;;3749:31;;3742:42;;;;-1:-1:-1;;;;;3893:32:5;;;;3886:4;3871:20;;3864:62;3845:2;3824:15;-1:-1:-1;;3820:29:5;3805:45;;;3801:54;;;;;-1:-1:-1;;3302:630:5:o",
    "linkReferences": {},
    "immutableReferences": {
      "1871": [
        {
          "start": 461,
          "length": 32
        },
        {
          "start": 701,
          "length": 32
        },
        {
          "start": 824,
          "length": 32
        }
      ]
    }
  },
  "methodIdentifiers": {
    "IS_TEST()": "fa7626d4",
    "failed()": "ba414fa6",
    "setUp()": "0a9254e4",
    "testExample()": "3f5a4a2a"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"log\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"log_address\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"log_bytes\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"log_bytes32\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"name\":\"log_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"val\",\"type\":\"address\"}],\"name\":\"log_named_address\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"val\",\"type\":\"bytes\"}],\"name\":\"log_named_bytes\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"val\",\"type\":\"bytes32\"}],\"name\":\"log_named_bytes32\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"val\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"log_named_decimal_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"val\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"log_named_decimal_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"val\",\"type\":\"int256\"}],\"name\":\"log_named_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"val\",\"type\":\"string\"}],\"name\":\"log_named_string\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"val\",\"type\":\"uint256\"}],\"name\":\"log_named_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"log_string\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"log_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"logs\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"IS_TEST\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"failed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"setUp\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testExample\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/test/NFTContract.t.sol\":\"ContractTest\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":ds-test/=lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":solmate/=lib/solmate/src/\",\":weird-erc20/=lib/solmate/lib/weird-erc20/src/\"]},\"sources\":{\"lib/ds-test/src/test.sol\":{\"keccak256\":\"0x529f30c5939d75689f6a982f7f96b8898bed30bd90ec5b385b57cab681e12b00\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://89075d5a96e87acef1d00cf556b409d1836728ec2e92f5629ceb5cae3d1e4354\",\"dweb:/ipfs/QmPAViJrxffEDns9GEMVSAzmr3soAzfrEg1CVuovwmNfnt\"]},\"lib/forge-std/src/Vm.sol\":{\"keccak256\":\"0xf87c5f8f8001db19a2d829fb79130d4ce06c7b289a6380a1556215b25a27d68b\",\"license\":\"Unlicense\",\"urls\":[\"bzz-raw://e1c45b3a3701adbac19163799bc0f3046cb279d7f89bcb566b28d5b894e42c31\",\"dweb:/ipfs/Qmbqq8NdqRLE6mQV9R1o48QqQ2RCFoHe7vsGnCPRidzKCh\"]},\"src/test/NFTContract.t.sol\":{\"keccak256\":\"0x506dc02992c6807fb2b243dcece8a2823dd66995a4706e4859e2b47945718b0f\",\"license\":\"Unlicense\",\"urls\":[\"bzz-raw://73b790b6e0d0475397f9f8e4ccb694655c89cecbad14175852f105bc37b8f60c\",\"dweb:/ipfs/QmS48LhDSaQiVMRcW5bJYBPbKnCtJZicv3mnCGB6wQkjwy\"]},\"src/test/utils/Console.sol\":{\"keccak256\":\"0x3430a4183d310b1ef785cde4c44dfc59db4d9c509915168775411d037e85aa29\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://afede9e7f21eb66c2d9f7465cc7b1632655e4eae2f737ceedc52a30c1ff9de3b\",\"dweb:/ipfs/QmNbNmHfuq4M1Ssy77SrEzZ5oe7kVeVm6VhWyD5SCexLhY\"]},\"src/test/utils/Utilities.sol\":{\"keccak256\":\"0x5c1b8a2159ab5cb7055d54294fe16a8c7020b85f89f2829e53a5de61afe9716e\",\"license\":\"Unlicense\",\"urls\":[\"bzz-raw://dc1ca818ddc2857e6ee90d081579e41e78f30b52ad0970fd9159242db08a1651\",\"dweb:/ipfs/Qmb2MAt1ScPsJMYwySGfLMwk1twmjMCJGm4QCFKC3D8tqW\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.17+commit.8df45f5f"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_address",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_bytes",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_bytes32",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "int256",
              "name": "",
              "type": "int256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "val",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_address",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "bytes",
              "name": "val",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_bytes",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "bytes32",
              "name": "val",
              "type": "bytes32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_bytes32",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256",
              "name": "val",
              "type": "int256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "decimals",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_decimal_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "val",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "decimals",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_decimal_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256",
              "name": "val",
              "type": "int256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "string",
              "name": "val",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_string",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "val",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_string",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "logs",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "IS_TEST",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "failed",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setUp"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testExample"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {},
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {},
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":ds-test/=lib/ds-test/src/",
        ":forge-std/=lib/forge-std/src/",
        ":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/",
        ":openzeppelin-contracts/=lib/openzeppelin-contracts/",
        ":solmate/=lib/solmate/src/",
        ":weird-erc20/=lib/solmate/lib/weird-erc20/src/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "src/test/NFTContract.t.sol": "ContractTest"
      },
      "libraries": {}
    },
    "sources": {
      "lib/ds-test/src/test.sol": {
        "keccak256": "0x529f30c5939d75689f6a982f7f96b8898bed30bd90ec5b385b57cab681e12b00",
        "urls": [
          "bzz-raw://89075d5a96e87acef1d00cf556b409d1836728ec2e92f5629ceb5cae3d1e4354",
          "dweb:/ipfs/QmPAViJrxffEDns9GEMVSAzmr3soAzfrEg1CVuovwmNfnt"
        ],
        "license": "GPL-3.0-or-later"
      },
      "lib/forge-std/src/Vm.sol": {
        "keccak256": "0xf87c5f8f8001db19a2d829fb79130d4ce06c7b289a6380a1556215b25a27d68b",
        "urls": [
          "bzz-raw://e1c45b3a3701adbac19163799bc0f3046cb279d7f89bcb566b28d5b894e42c31",
          "dweb:/ipfs/Qmbqq8NdqRLE6mQV9R1o48QqQ2RCFoHe7vsGnCPRidzKCh"
        ],
        "license": "Unlicense"
      },
      "src/test/NFTContract.t.sol": {
        "keccak256": "0x506dc02992c6807fb2b243dcece8a2823dd66995a4706e4859e2b47945718b0f",
        "urls": [
          "bzz-raw://73b790b6e0d0475397f9f8e4ccb694655c89cecbad14175852f105bc37b8f60c",
          "dweb:/ipfs/QmS48LhDSaQiVMRcW5bJYBPbKnCtJZicv3mnCGB6wQkjwy"
        ],
        "license": "Unlicense"
      },
      "src/test/utils/Console.sol": {
        "keccak256": "0x3430a4183d310b1ef785cde4c44dfc59db4d9c509915168775411d037e85aa29",
        "urls": [
          "bzz-raw://afede9e7f21eb66c2d9f7465cc7b1632655e4eae2f737ceedc52a30c1ff9de3b",
          "dweb:/ipfs/QmNbNmHfuq4M1Ssy77SrEzZ5oe7kVeVm6VhWyD5SCexLhY"
        ],
        "license": "MIT"
      },
      "src/test/utils/Utilities.sol": {
        "keccak256": "0x5c1b8a2159ab5cb7055d54294fe16a8c7020b85f89f2829e53a5de61afe9716e",
        "urls": [
          "bzz-raw://dc1ca818ddc2857e6ee90d081579e41e78f30b52ad0970fd9159242db08a1651",
          "dweb:/ipfs/Qmb2MAt1ScPsJMYwySGfLMwk1twmjMCJGm4QCFKC3D8tqW"
        ],
        "license": "Unlicense"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "src/test/NFTContract.t.sol",
    "id": 1960,
    "exportedSymbols": {
      "ContractTest": [
        1959
      ],
      "DSTest": [
        1680
      ],
      "Utilities": [
        10299
      ],
      "Vm": [
        1853
      ],
      "console": [
        10173
      ]
    },
    "nodeType": "SourceUnit",
    "src": "38:922:2",
    "nodes": [
      {
        "id": 1855,
        "nodeType": "PragmaDirective",
        "src": "38:24:2",
        "nodes": [],
        "literals": [
          "solidity",
          ">=",
          "0.8",
          ".0"
        ]
      },
      {
        "id": 1857,
        "nodeType": "ImportDirective",
        "src": "64:40:2",
        "nodes": [],
        "absolutePath": "lib/ds-test/src/test.sol",
        "file": "ds-test/test.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 1960,
        "sourceUnit": 1681,
        "symbolAliases": [
          {
            "foreign": {
              "id": 1856,
              "name": "DSTest",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 1680,
              "src": "72:6:2",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 1859,
        "nodeType": "ImportDirective",
        "src": "105:48:2",
        "nodes": [],
        "absolutePath": "src/test/utils/Utilities.sol",
        "file": "./utils/Utilities.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 1960,
        "sourceUnit": 10300,
        "symbolAliases": [
          {
            "foreign": {
              "id": 1858,
              "name": "Utilities",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 10299,
              "src": "113:9:2",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 1861,
        "nodeType": "ImportDirective",
        "src": "154:44:2",
        "nodes": [],
        "absolutePath": "src/test/utils/Console.sol",
        "file": "./utils/Console.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 1960,
        "sourceUnit": 10174,
        "symbolAliases": [
          {
            "foreign": {
              "id": 1860,
              "name": "console",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 10173,
              "src": "162:7:2",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 1863,
        "nodeType": "ImportDirective",
        "src": "199:36:2",
        "nodes": [],
        "absolutePath": "lib/forge-std/src/Vm.sol",
        "file": "forge-std/Vm.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 1960,
        "sourceUnit": 1854,
        "symbolAliases": [
          {
            "foreign": {
              "id": 1862,
              "name": "Vm",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 1853,
              "src": "207:2:2",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 1959,
        "nodeType": "ContractDefinition",
        "src": "237:722:2",
        "nodes": [
          {
            "id": 1871,
            "nodeType": "VariableDeclaration",
            "src": "275:43:2",
            "nodes": [],
            "constant": false,
            "mutability": "immutable",
            "name": "vm",
            "nameLocation": "297:2:2",
            "scope": 1959,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_Vm_$1853",
              "typeString": "contract Vm"
            },
            "typeName": {
              "id": 1867,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 1866,
                "name": "Vm",
                "nameLocations": [
                  "275:2:2"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 1853,
                "src": "275:2:2"
              },
              "referencedDeclaration": 1853,
              "src": "275:2:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Vm_$1853",
                "typeString": "contract Vm"
              }
            },
            "value": {
              "arguments": [
                {
                  "id": 1869,
                  "name": "HEVM_ADDRESS",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 107,
                  "src": "305:12:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                ],
                "id": 1868,
                "name": "Vm",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": 1853,
                "src": "302:2:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_contract$_Vm_$1853_$",
                  "typeString": "type(contract Vm)"
                }
              },
              "id": 1870,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "typeConversion",
              "lValueRequested": false,
              "nameLocations": [],
              "names": [],
              "nodeType": "FunctionCall",
              "src": "302:16:2",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Vm_$1853",
                "typeString": "contract Vm"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 1874,
            "nodeType": "VariableDeclaration",
            "src": "325:24:2",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "utils",
            "nameLocation": "344:5:2",
            "scope": 1959,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_Utilities_$10299",
              "typeString": "contract Utilities"
            },
            "typeName": {
              "id": 1873,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 1872,
                "name": "Utilities",
                "nameLocations": [
                  "325:9:2"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 10299,
                "src": "325:9:2"
              },
              "referencedDeclaration": 10299,
              "src": "325:9:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Utilities_$10299",
                "typeString": "contract Utilities"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 1877,
            "nodeType": "VariableDeclaration",
            "src": "355:32:2",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "users",
            "nameLocation": "382:5:2",
            "scope": 1959,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_address_payable_$dyn_storage",
              "typeString": "address payable[]"
            },
            "typeName": {
              "baseType": {
                "id": 1875,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "355:15:2",
                "stateMutability": "payable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address_payable",
                  "typeString": "address payable"
                }
              },
              "id": 1876,
              "nodeType": "ArrayTypeName",
              "src": "355:17:2",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_address_payable_$dyn_storage_ptr",
                "typeString": "address payable[]"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 1895,
            "nodeType": "FunctionDefinition",
            "src": "394:102:2",
            "nodes": [],
            "body": {
              "id": 1894,
              "nodeType": "Block",
              "src": "418:78:2",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 1885,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1880,
                      "name": "utils",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1874,
                      "src": "428:5:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Utilities_$10299",
                        "typeString": "contract Utilities"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 1883,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "436:13:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_Utilities_$10299_$",
                          "typeString": "function () returns (contract Utilities)"
                        },
                        "typeName": {
                          "id": 1882,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 1881,
                            "name": "Utilities",
                            "nameLocations": [
                              "440:9:2"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 10299,
                            "src": "440:9:2"
                          },
                          "referencedDeclaration": 10299,
                          "src": "440:9:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Utilities_$10299",
                            "typeString": "contract Utilities"
                          }
                        }
                      },
                      "id": 1884,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "436:15:2",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Utilities_$10299",
                        "typeString": "contract Utilities"
                      }
                    },
                    "src": "428:23:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Utilities_$10299",
                      "typeString": "contract Utilities"
                    }
                  },
                  "id": 1886,
                  "nodeType": "ExpressionStatement",
                  "src": "428:23:2"
                },
                {
                  "expression": {
                    "id": 1892,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1887,
                      "name": "users",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1877,
                      "src": "461:5:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_payable_$dyn_storage",
                        "typeString": "address payable[] storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "35",
                          "id": 1890,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "487:1:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_5_by_1",
                            "typeString": "int_const 5"
                          },
                          "value": "5"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_5_by_1",
                            "typeString": "int_const 5"
                          }
                        ],
                        "expression": {
                          "id": 1888,
                          "name": "utils",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1874,
                          "src": "469:5:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Utilities_$10299",
                            "typeString": "contract Utilities"
                          }
                        },
                        "id": 1889,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "475:11:2",
                        "memberName": "createUsers",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 10279,
                        "src": "469:17:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$_t_array$_t_address_payable_$dyn_memory_ptr_$",
                          "typeString": "function (uint256) external returns (address payable[] memory)"
                        }
                      },
                      "id": 1891,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "469:20:2",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_payable_$dyn_memory_ptr",
                        "typeString": "address payable[] memory"
                      }
                    },
                    "src": "461:28:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_payable_$dyn_storage",
                      "typeString": "address payable[] storage ref"
                    }
                  },
                  "id": 1893,
                  "nodeType": "ExpressionStatement",
                  "src": "461:28:2"
                }
              ]
            },
            "functionSelector": "0a9254e4",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setUp",
            "nameLocation": "403:5:2",
            "parameters": {
              "id": 1878,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "408:2:2"
            },
            "returnParameters": {
              "id": 1879,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "418:0:2"
            },
            "scope": 1959,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 1958,
            "nodeType": "FunctionDefinition",
            "src": "502:455:2",
            "nodes": [],
            "body": {
              "id": 1957,
              "nodeType": "Block",
              "src": "532:425:2",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    1899
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1899,
                      "mutability": "mutable",
                      "name": "alice",
                      "nameLocation": "558:5:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 1957,
                      "src": "542:21:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      },
                      "typeName": {
                        "id": 1898,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "542:15:2",
                        "stateMutability": "payable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1903,
                  "initialValue": {
                    "baseExpression": {
                      "id": 1900,
                      "name": "users",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1877,
                      "src": "566:5:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_payable_$dyn_storage",
                        "typeString": "address payable[] storage ref"
                      }
                    },
                    "id": 1902,
                    "indexExpression": {
                      "hexValue": "30",
                      "id": 1901,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "572:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "566:8:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "542:32:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1907,
                        "name": "alice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1899,
                        "src": "665:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "hexValue": "416c696365",
                        "id": 1908,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "672:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_81376b9868b292a46a1c486d344e427a3088657fda629b5f4a647822d329cd6a",
                          "typeString": "literal_string \"Alice\""
                        },
                        "value": "Alice"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_81376b9868b292a46a1c486d344e427a3088657fda629b5f4a647822d329cd6a",
                          "typeString": "literal_string \"Alice\""
                        }
                      ],
                      "expression": {
                        "id": 1904,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1871,
                        "src": "656:2:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$1853",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 1906,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "659:5:2",
                      "memberName": "label",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1852,
                      "src": "656:8:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (address,string memory) external"
                      }
                    },
                    "id": 1909,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "656:24:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1910,
                  "nodeType": "ExpressionStatement",
                  "src": "656:24:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "616c69636527732061646472657373",
                        "id": 1914,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "702:17:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8a48c81590e55d7ad0f53183aac8413bbdf45e7e85299569b45b9c3548b68af9",
                          "typeString": "literal_string \"alice's address\""
                        },
                        "value": "alice's address"
                      },
                      {
                        "id": 1915,
                        "name": "alice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1899,
                        "src": "721:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_8a48c81590e55d7ad0f53183aac8413bbdf45e7e85299569b45b9c3548b68af9",
                          "typeString": "literal_string \"alice's address\""
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "expression": {
                        "id": 1911,
                        "name": "console",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10173,
                        "src": "690:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_console_$10173_$",
                          "typeString": "type(library console)"
                        }
                      },
                      "id": 1913,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "698:3:2",
                      "memberName": "log",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2868,
                      "src": "690:11:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_string_memory_ptr_$_t_address_$returns$__$",
                        "typeString": "function (string memory,address) view"
                      }
                    },
                    "id": 1916,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "690:37:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1917,
                  "nodeType": "ExpressionStatement",
                  "src": "690:37:2"
                },
                {
                  "assignments": [
                    1919
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1919,
                      "mutability": "mutable",
                      "name": "bob",
                      "nameLocation": "753:3:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 1957,
                      "src": "737:19:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      },
                      "typeName": {
                        "id": 1918,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "737:15:2",
                        "stateMutability": "payable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1923,
                  "initialValue": {
                    "baseExpression": {
                      "id": 1920,
                      "name": "users",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1877,
                      "src": "759:5:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_payable_$dyn_storage",
                        "typeString": "address payable[] storage ref"
                      }
                    },
                    "id": 1922,
                    "indexExpression": {
                      "hexValue": "31",
                      "id": 1921,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "765:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "759:8:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "737:30:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1927,
                        "name": "bob",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1919,
                        "src": "786:3:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "hexValue": "426f62",
                        "id": 1928,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "791:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_28cac318a86c8a0a6a9156c2dba2c8c2363677ba0514ef616592d81557e679b6",
                          "typeString": "literal_string \"Bob\""
                        },
                        "value": "Bob"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_28cac318a86c8a0a6a9156c2dba2c8c2363677ba0514ef616592d81557e679b6",
                          "typeString": "literal_string \"Bob\""
                        }
                      ],
                      "expression": {
                        "id": 1924,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1871,
                        "src": "777:2:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$1853",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 1926,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "780:5:2",
                      "memberName": "label",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1852,
                      "src": "777:8:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (address,string memory) external"
                      }
                    },
                    "id": 1929,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "777:20:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1930,
                  "nodeType": "ExpressionStatement",
                  "src": "777:20:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1934,
                        "name": "alice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1899,
                        "src": "817:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "expression": {
                        "id": 1931,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1871,
                        "src": "808:2:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$1853",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 1933,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "811:5:2",
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1748,
                      "src": "808:8:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 1935,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "808:15:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1936,
                  "nodeType": "ExpressionStatement",
                  "src": "808:15:2"
                },
                {
                  "assignments": [
                    1938,
                    null
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1938,
                      "mutability": "mutable",
                      "name": "sent",
                      "nameLocation": "839:4:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 1957,
                      "src": "834:9:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 1937,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "834:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    },
                    null
                  ],
                  "id": 1945,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "",
                        "id": 1943,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "875:2:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                            "typeString": "literal_string \"\""
                          }
                        ],
                        "expression": {
                          "id": 1939,
                          "name": "bob",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1919,
                          "src": "849:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "id": 1940,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "853:4:2",
                        "memberName": "call",
                        "nodeType": "MemberAccess",
                        "src": "849:8:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                          "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                        }
                      },
                      "id": 1942,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "hexValue": "3130",
                          "id": 1941,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "865:8:2",
                          "subdenomination": "ether",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_10000000000000000000_by_1",
                            "typeString": "int_const 10000000000000000000"
                          },
                          "value": "10"
                        }
                      ],
                      "src": "849:25:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
                        "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                      }
                    },
                    "id": 1944,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "849:29:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                      "typeString": "tuple(bool,bytes memory)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "833:45:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1947,
                        "name": "sent",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1938,
                        "src": "899:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1946,
                      "name": "assertTrue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        163,
                        184
                      ],
                      "referencedDeclaration": 163,
                      "src": "888:10:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$returns$__$",
                        "typeString": "function (bool)"
                      }
                    },
                    "id": 1948,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "888:16:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1949,
                  "nodeType": "ExpressionStatement",
                  "src": "888:16:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 1951,
                          "name": "bob",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1919,
                          "src": "923:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "id": 1952,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "927:7:2",
                        "memberName": "balance",
                        "nodeType": "MemberAccess",
                        "src": "923:11:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 1953,
                          "name": "alice",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1899,
                          "src": "936:5:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "id": 1954,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "942:7:2",
                        "memberName": "balance",
                        "nodeType": "MemberAccess",
                        "src": "936:13:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1950,
                      "name": "assertGt",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        587,
                        612,
                        642,
                        667
                      ],
                      "referencedDeclaration": 587,
                      "src": "914:8:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 1955,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "914:36:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1956,
                  "nodeType": "ExpressionStatement",
                  "src": "914:36:2"
                }
              ]
            },
            "functionSelector": "3f5a4a2a",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testExample",
            "nameLocation": "511:11:2",
            "parameters": {
              "id": 1896,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "522:2:2"
            },
            "returnParameters": {
              "id": 1897,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "532:0:2"
            },
            "scope": 1959,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 1864,
              "name": "DSTest",
              "nameLocations": [
                "262:6:2"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1680,
              "src": "262:6:2"
            },
            "id": 1865,
            "nodeType": "InheritanceSpecifier",
            "src": "262:6:2"
          }
        ],
        "canonicalName": "ContractTest",
        "contractDependencies": [
          10299
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          1959,
          1680
        ],
        "name": "ContractTest",
        "nameLocation": "246:12:2",
        "scope": 1960,
        "usedErrors": []
      }
    ],
    "license": "Unlicense"
  },
  "id": 2
}